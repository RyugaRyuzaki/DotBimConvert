// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace CompressDotBim
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct DotBimBufferColor : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static DotBimBufferColor GetRootAsDotBimBufferColor(ByteBuffer _bb) { return GetRootAsDotBimBufferColor(_bb, new DotBimBufferColor()); }
  public static DotBimBufferColor GetRootAsDotBimBufferColor(ByteBuffer _bb, DotBimBufferColor obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DotBimBufferColor __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int R { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int G { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int B { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int A { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<CompressDotBim.DotBimBufferColor> CreateDotBimBufferColor(FlatBufferBuilder builder,
      int r = 0,
      int g = 0,
      int b = 0,
      int a = 0) {
    builder.StartTable(4);
    DotBimBufferColor.AddA(builder, a);
    DotBimBufferColor.AddB(builder, b);
    DotBimBufferColor.AddG(builder, g);
    DotBimBufferColor.AddR(builder, r);
    return DotBimBufferColor.EndDotBimBufferColor(builder);
  }

  public static void StartDotBimBufferColor(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddR(FlatBufferBuilder builder, int r) { builder.AddInt(0, r, 0); }
  public static void AddG(FlatBufferBuilder builder, int g) { builder.AddInt(1, g, 0); }
  public static void AddB(FlatBufferBuilder builder, int b) { builder.AddInt(2, b, 0); }
  public static void AddA(FlatBufferBuilder builder, int a) { builder.AddInt(3, a, 0); }
  public static Offset<CompressDotBim.DotBimBufferColor> EndDotBimBufferColor(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CompressDotBim.DotBimBufferColor>(o);
  }
}


static public class DotBimBufferColorVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*R*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*G*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*B*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*A*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
