# automatically generated by the FlatBuffers compiler, do not modify

# namespace: CompressDotBim

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DotBimBufferVector(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DotBimBufferVector()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDotBimBufferVector(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DotBimBufferVector
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DotBimBufferVector
    def X(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DotBimBufferVector
    def Y(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DotBimBufferVector
    def Z(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def DotBimBufferVectorStart(builder):
    builder.StartObject(3)

def Start(builder):
    DotBimBufferVectorStart(builder)

def DotBimBufferVectorAddX(builder, x):
    builder.PrependInt32Slot(0, x, 0)

def AddX(builder, x):
    DotBimBufferVectorAddX(builder, x)

def DotBimBufferVectorAddY(builder, y):
    builder.PrependInt32Slot(1, y, 0)

def AddY(builder, y):
    DotBimBufferVectorAddY(builder, y)

def DotBimBufferVectorAddZ(builder, z):
    builder.PrependInt32Slot(2, z, 0)

def AddZ(builder, z):
    DotBimBufferVectorAddZ(builder, z)

def DotBimBufferVectorEnd(builder):
    return builder.EndObject()

def End(builder):
    return DotBimBufferVectorEnd(builder)
