# automatically generated by the FlatBuffers compiler, do not modify

# namespace: CompressDotBim

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class DotBimBufferColor(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DotBimBufferColor()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDotBimBufferColor(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # DotBimBufferColor
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DotBimBufferColor
    def R(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DotBimBufferColor
    def G(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DotBimBufferColor
    def B(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # DotBimBufferColor
    def A(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def DotBimBufferColorStart(builder):
    builder.StartObject(4)

def Start(builder):
    DotBimBufferColorStart(builder)

def DotBimBufferColorAddR(builder, r):
    builder.PrependInt32Slot(0, r, 0)

def AddR(builder, r):
    DotBimBufferColorAddR(builder, r)

def DotBimBufferColorAddG(builder, g):
    builder.PrependInt32Slot(1, g, 0)

def AddG(builder, g):
    DotBimBufferColorAddG(builder, g)

def DotBimBufferColorAddB(builder, b):
    builder.PrependInt32Slot(2, b, 0)

def AddB(builder, b):
    DotBimBufferColorAddB(builder, b)

def DotBimBufferColorAddA(builder, a):
    builder.PrependInt32Slot(3, a, 0)

def AddA(builder, a):
    DotBimBufferColorAddA(builder, a)

def DotBimBufferColorEnd(builder):
    return builder.EndObject()

def End(builder):
    return DotBimBufferColorEnd(builder)
